#https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-syntaxversion: 0.2
#https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html
version: 0.2
run-as: root
#env:
#  parameter-store:
#    AWS_ACCESS_KEY_ID_PARAM: /CodeBuild/AWS_ACCESS_KEY_ID
#    AWS_SECRET_ACCESS_KEY_PARAM: /CodeBuild/AWS_SECRET_ACCESS_KEY
#  shell: shell-tag
#  variables:
#    key: "value"
#    key: "value"
#  parameter-store:
#    key: "value"
#    key: "value"
#  exported-variables:
#    - variable
#    - variable
#  secrets-manager:
#    DB_PASSWORD: "my_secret:password"
#    DB_USER: "my_secret:username"
#  git-credential-helper: no | yes
#phases:
#  build:
#    commands:
#      - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PARAM
#      - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PARAM
#      # Your Ansible commands below
#      - ansible-playbook -i hosts ec2-key.yml

env:
  variables:
    IMAGE_REPO_NAME: test-app
    AWS_ACCOUNT_ID: 758210838432
phases:
  install:
    runtime-versions:
      java: openjdk8
    commands:
#======= install kubectl for deploy to EKS =======
#      - echo Installing app dependencies...
#      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl
#      - chmod +x ./kubectl
#      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
#      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
#      - kubectl version --short --client
#      - aws eks --region us-west-2 update-kubeconfig --name test-eks
  pre_build:
    commands:
      - mvn -Dmaven.test.skip package
  build:
    commands:
      - echo "aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER"
      - docker build -t $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER .
  post_build:
    commands:
#      - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin ECR_REPO
      - echo "docker tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER"
      - docker tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER
      - echo "docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER"
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER
#      - cd $CODEBUILD_SRC_DIR
#      - echo List directory
#      - ls -la
#      - kubectl apply -f deployment.yaml
      - # ======== for CD fargate json file ========
      - echo Writing image definitions file...
      # ========> for standard
      - printf '[{"name":"%s","imageUri":"%s"}]' $IMAGE_REPO_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER > imagedefinitions.json
      # ========> for blue-green
#      - printf '{"ImageURI":"%s"}' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER > imageDetail.json
artifacts: # for fargate json file
  files:
    - imagedefinitions.json
#    - imageDetail.json
    - taskdef.json
    - appspec.yaml